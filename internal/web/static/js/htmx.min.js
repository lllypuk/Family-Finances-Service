/* htmx.org v1.9.12 - минимальная версия для начала */
(function() {
  'use strict';
  
  // Базовая реализация HTMX функций для начала разработки
  var htmx = {
    version: "1.9.12-minimal",
    
    // Обработка AJAX запросов
    ajax: function(method, url, config) {
      config = config || {};
      var xhr = new XMLHttpRequest();
      
      xhr.open(method, url, true);
      xhr.setRequestHeader('HX-Request', 'true');
      
      if (config.headers) {
        for (var header in config.headers) {
          xhr.setRequestHeader(header, config.headers[header]);
        }
      }
      
      xhr.onreadystatechange = function() {
        if (xhr.readyState === 4) {
          if (xhr.status >= 200 && xhr.status < 300) {
            if (config.success) config.success(xhr);
          } else {
            if (config.error) config.error(xhr);
          }
        }
      };
      
      xhr.send(config.data || null);
      return xhr;
    },
    
    // Поиск элементов
    find: function(selector) {
      return document.querySelector(selector);
    },
    
    findAll: function(selector) {
      return document.querySelectorAll(selector);
    },
    
    // Обновление содержимого элемента
    swap: function(target, content, swapStyle) {
      if (typeof target === 'string') {
        target = htmx.find(target);
      }
      
      if (!target) return;
      
      switch(swapStyle) {
        case 'innerHTML':
          target.innerHTML = content;
          break;
        case 'outerHTML':
          target.outerHTML = content;
          break;
        case 'beforeend':
          target.insertAdjacentHTML('beforeend', content);
          break;
        case 'afterend':
          target.insertAdjacentHTML('afterend', content);
          break;
        default:
          target.innerHTML = content;
      }
    },
    
    // Инициализация
    init: function() {
      document.addEventListener('DOMContentLoaded', function() {
        htmx.processNode(document.body);
      });
    },
    
    // Обработка элементов с HTMX атрибутами
    processNode: function(node) {
      var elements = node.querySelectorAll('[hx-get], [hx-post], [hx-put], [hx-delete]');
      
      for (var i = 0; i < elements.length; i++) {
        htmx.processElement(elements[i]);
      }
    },
    
    // Обработка отдельного элемента
    processElement: function(element) {
      var method, url, trigger, target, swap;
      
      if (element.hasAttribute('hx-get')) {
        method = 'GET';
        url = element.getAttribute('hx-get');
      } else if (element.hasAttribute('hx-post')) {
        method = 'POST';
        url = element.getAttribute('hx-post');
      } else if (element.hasAttribute('hx-put')) {
        method = 'PUT';
        url = element.getAttribute('hx-put');
      } else if (element.hasAttribute('hx-delete')) {
        method = 'DELETE';
        url = element.getAttribute('hx-delete');
      }
      
      trigger = element.getAttribute('hx-trigger') || 'click';
      target = element.getAttribute('hx-target') || element;
      swap = element.getAttribute('hx-swap') || 'innerHTML';
      
      if (trigger === 'load') {
        htmx.makeRequest(element, method, url, target, swap);
      } else {
        element.addEventListener(trigger, function(e) {
          e.preventDefault();
          htmx.makeRequest(element, method, url, target, swap);
        });
      }
    },
    
    // Выполнение запроса
    makeRequest: function(element, method, url, target, swap) {
      if (typeof target === 'string') {
        target = htmx.find(target);
      }
      
      var config = {
        success: function(xhr) {
          var redirect = xhr.getResponseHeader('HX-Redirect');
          if (redirect) {
            window.location.href = redirect;
            return;
          }
          
          htmx.swap(target, xhr.responseText, swap);
          htmx.processNode(target);
        },
        error: function(xhr) {
          console.error('HTMX request failed:', xhr.status, xhr.statusText);
        }
      };
      
      if (method === 'POST' && element.tagName === 'FORM') {
        config.data = new FormData(element);
      }
      
      htmx.ajax(method, url, config);
    }
  };
  
  // Глобальный объект
  window.htmx = htmx;
  
  // Автоматическая инициализация
  htmx.init();
})();
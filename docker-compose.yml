version: '3.8'

services:
  # MongoDB база данных
  mongodb:
    image: mongodb/mongodb-community-server:latest
    container_name: family-budget-mongodb
    restart: unless-stopped
    ports:
      - "${MONGODB_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      MONGO_INITDB_DATABASE: ${MONGODB_DATABASE:-family_budget}
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - family-budget-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Mongo Express для администрирования БД
  mongo-express:
    image: mongo-express:1.0.0
    container_name: family-budget-mongo-express
    restart: unless-stopped
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-password123}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password123}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_USERNAME:-admin}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_PASSWORD:-admin}
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - family-budget-network

  # Redis для кэширования (опционально)
  redis:
    image: redis:7.2-alpine
    container_name: family-budget-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD:-redis123}"
    volumes:
      - redis_data:/data
    networks:
      - family-budget-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # Приложение (для продакшн сборки)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: family-budget-app
    restart: unless-stopped
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      SERVER_PORT: ${SERVER_PORT:-8080}
      SERVER_HOST: ${SERVER_HOST:-0.0.0.0}
      MONGODB_URI: ${MONGODB_URI:-mongodb://admin:password123@mongodb:27017/family_budget?authSource=admin}
      MONGODB_DATABASE: ${MONGODB_DATABASE:-family_budget}
      REDIS_URL: ${REDIS_URL:-redis://:redis123@redis:6379}
      ENVIRONMENT: ${ENVIRONMENT:-production}
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - family-budget-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  family-budget-network:
    driver: bridge
